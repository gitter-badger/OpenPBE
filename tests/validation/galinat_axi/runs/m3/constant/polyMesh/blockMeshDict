/*--------------------------------*- C++ -*----------------------------------*
| =========                 |                                                 |
| \      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \    /   O peration     | Version:  2.1.0                                 |
|   \  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \/     M anipulation  |                                                 |
*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.3;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.01;

// radius of the pipe
D 1.5;
// radius of the orifice
d 0.75;

// dimensions of the upsream section
xOne 20.0; //60;
yOne $d;
yTwo $D;
zPlus 0.01;
zMinus -0.01;
zPlusTwo 0.02;
zMinusTwo -0.02;
// number of cells in the upstream sections:
nXOne  300; //200;
nYOne  12;

// Grading parameters
radialGrading 0.5;
upstreamGrading 0.1;
downstreamGrading 10;

// dimensions of the orifice section
xTwo 20.5; //xOne + orifice thickness;
// number of cells in the orifice section:
nXTwo  8; //400;

// dimensions of the downstream section
xThree 62.0; //100.5; //xTwo + length of the downstream section;
// number of cells in the downstream section:
nXThree  500; //250;

// number of cells in outside sections
nYTwo 10;

vertices        
(
 // upstream central section
 (0 0 0) //0
 (0 $yOne $zPlus) //1
 (0 $yOne $zMinus) //2
 ($xOne 0 0) //3
 ($xOne $yOne $zPlus) //4
 ($xOne $yOne $zMinus) //5

 //orifice section
 ($xTwo 0 0) //6
 ($xTwo $yOne $zPlus) //7
 ($xTwo $yOne $zMinus) //8

 //downstream section
 ($xThree 0 0) //9
 ($xThree $yOne $zPlus) //10
 ($xThree $yOne $zMinus) //11

 //upstream outside section
 (0 $yTwo $zPlusTwo) // 12
 (0 $yTwo $zMinusTwo) // 13
 ($xOne $yTwo $zPlusTwo) // 14
 ($xOne $yTwo $zMinusTwo) // 15

 //upstream outside section
 ($xTwo $yTwo $zPlusTwo) // 16
 ($xTwo $yTwo $zMinusTwo) // 17
 ($xThree $yTwo $zPlusTwo) // 18
 ($xThree $yTwo $zMinusTwo) // 19
);

blocks
(
    //orifice
    hex (3 6 8 5 3 6 7 4) ($nXTwo $nYOne 1) simpleGrading (1 1 1)

    // inside upstream section
    hex (0 3 5 2 0 3 4 1) ($nXOne $nYOne 1) simpleGrading ($upstreamGrading 1 1)
    // inside downstream section
    hex (6 9 11 8 6 9 10 7) ($nXThree $nYOne 1) simpleGrading ($downstreamGrading 1 1)

    // outside upstream section
    hex (2 5 15 13 1 4 14 12) ($nXOne $nYTwo 1) simpleGrading ($upstreamGrading $radialGrading 1)
    // outside downstream section
    hex (8 11 19 17 7 10 18 16) ($nXThree $nYTwo 1) simpleGrading ($downstreamGrading $radialGrading 1)
);
boundary
(
   front 
   {
    type wedge;
    faces
      (
        (0 1 4 3)
        (3 4 7 6)
        (6 7 10 9)
        (7 16 18 10)
        (1 12 14 4)
      );
   }

   back 
   {
    type wedge;
    faces
    ( 
      (0 2 5 3)
      (3 5 8 6)
      (6 8 11 9)
      (8 17 19 11)
      (2 5 15 13)
    );
   }

   axis 
   {
    type symmetryPlane;
    faces
    (
      (0 3 3 0)  
      (3 6 6 3)  
      (6 9 9 6)  
    );
   }

   walls
   {
    type wall;
    faces
    (
      (4 5 8 7)  
      (12 13 15 14)  
      (5 15 14 4)  
      (8 7 16 17)
      (17 16 18 19)
    );
   }

   inlet
   {
    type patch;
    faces
    (
      (0 2 1 0)  
      (2 13 12 1)  
    );
   }

   outlet
   {
    type patch;
    faces
    (
      (9 11 10 9)
      (11 19 18 10)  
    );
   }
);
// ************************************************************************* //
